<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Static Analysis on Cybernetic Coffee</title>
    <link>https://cybernetic.coffee/tags/static-analysis/</link>
    <description>Recent content in Static Analysis on Cybernetic Coffee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://cybernetic.coffee/tags/static-analysis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learn Source Code Auditing By Building a Tool #1: Static Analysis for the Dynamically Paralysed</title>
      <link>https://cybernetic.coffee/blog/learn-source-auditing-1/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://cybernetic.coffee/blog/learn-source-auditing-1/</guid>
      <description>Source code auditing/analysis is like taking the blueprint for a car and trying to find flaws in the design before it is ever built and sold to the public. This has advantages over just testing the car once it has been manufactured but is not without flaws. It&amp;rsquo;s much easier to miss things when presented with a massively complex system whose operations may only be visualized or imagined. Of course it is also possible to have both a fully constructed model and a blueprint with which to audit the car for flaws.</description>
    </item>
    
  </channel>
</rss>
