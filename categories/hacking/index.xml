<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hacking on Cybernetic Coffee</title>
    <link>https://angus-c-git.github.io/cybernetic-coffee/categories/hacking/</link>
    <description>Recent content in Hacking on Cybernetic Coffee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://angus-c-git.github.io/cybernetic-coffee/categories/hacking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web Application Testing Methodologies</title>
      <link>https://angus-c-git.github.io/cybernetic-coffee/blog/web-app-testing-methodologies/</link>
      <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://angus-c-git.github.io/cybernetic-coffee/blog/web-app-testing-methodologies/</guid>
      <description>Testing Modern Web Applications The modern web application is a mass of complex interwoven components neatly hidden away behind a clean and responsive user interface (UI). But once you start unplugging the cords from the frontend framework the scope of the application becomes clear, the attack surface large. In a world where testers are increasingly short on time and/or daunted by the scope of vulnerabilities to test for how can we ensure coverage without forfeiting time?</description>
    </item>
    
  </channel>
</rss>
