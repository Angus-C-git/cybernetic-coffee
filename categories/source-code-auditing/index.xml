<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Source Code Auditing on Cybernetic Coffee</title>
    <link>https://cybernetic.coffee/categories/source-code-auditing/</link>
    <description>Recent content in Source Code Auditing on Cybernetic Coffee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://cybernetic.coffee/categories/source-code-auditing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C Sauce Audits</title>
      <link>https://cybernetic.coffee/blog/c-sauce-audits/</link>
      <pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://cybernetic.coffee/blog/c-sauce-audits/</guid>
      <description>Everything is open source if you can afford a binaryninja licence
 Very basic an incomplete overview of C focused source code auditing.
Heap Vulnerabilities Use After Free (UAF)  Look at the order in which functions are called or can be called and trace the execution Is memory free&amp;rsquo;d and then reused later? If so it may be possible for an attacker to edit a freed chunk if they can control data which reaches the part of the code which reuses the freed pointer Being able to edit a freed chunk forms the basis for most heap exploits  char* ptr = (char*)malloc (SIZE); .</description>
    </item>
    
  </channel>
</rss>
